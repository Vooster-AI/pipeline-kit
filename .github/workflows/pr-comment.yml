name: PR Comment

on:
  workflow_run:
    workflows: ["rust-ci", "Code Coverage", "Security Audit"]
    types:
      - completed

# Only run on pull requests
jobs:
  comment:
    name: Post PR Comment
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion != 'cancelled'
    permissions:
      pull-requests: write
      actions: read

    steps:
      - name: Download PR number artifact
        uses: actions/github-script@v7
        id: pr-number
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });

            // Try to find PR number from artifacts or use PR from the workflow run
            const prNumber = context.payload.workflow_run.pull_requests[0]?.number;
            if (!prNumber) {
              console.log('No PR number found, skipping comment');
              return null;
            }
            return prNumber;
          result-encoding: string

      - name: Find existing comment
        uses: peter-evans/find-comment@v3
        if: steps.pr-number.outputs.result != 'null'
        id: find-comment
        with:
          issue-number: ${{ steps.pr-number.outputs.result }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- pipeline-kit-ci-summary -->'

      - name: Build comment body
        if: steps.pr-number.outputs.result != 'null'
        id: comment-body
        uses: actions/github-script@v7
        with:
          script: |
            const workflowName = context.payload.workflow_run.name;
            const conclusion = context.payload.workflow_run.conclusion;
            const runUrl = context.payload.workflow_run.html_url;

            let emoji = '‚úÖ';
            if (conclusion === 'failure') emoji = '‚ùå';
            else if (conclusion === 'success') emoji = '‚úÖ';
            else if (conclusion === 'skipped') emoji = '‚è≠Ô∏è';

            let body = `<!-- pipeline-kit-ci-summary -->\n`;
            body += `## ü§ñ CI Results\n\n`;
            body += `| Workflow | Status | Details |\n`;
            body += `|----------|--------|----------|\n`;
            body += `| **${workflowName}** | ${emoji} ${conclusion} | [View Run](${runUrl}) |\n`;
            body += `\n`;

            if (workflowName === 'Code Coverage') {
              body += `### üìä Coverage Report\n`;
              body += `Coverage report is available on [Codecov](https://codecov.io/gh/${context.repo.owner}/${context.repo.repo}/pull/${{ steps.pr-number.outputs.result }}).\n\n`;
            }

            if (workflowName === 'Security Audit') {
              if (conclusion === 'success') {
                body += `### üîí Security Audit\n`;
                body += `No security vulnerabilities detected. All dependencies are secure.\n\n`;
              } else {
                body += `### ‚ö†Ô∏è Security Audit\n`;
                body += `Security issues detected. Please review the [workflow run](${runUrl}) for details.\n\n`;
              }
            }

            body += `\n---\n`;
            body += `*Last updated: ${new Date().toISOString()}*`;

            return body;

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v4
        if: steps.pr-number.outputs.result != 'null'
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ steps.pr-number.outputs.result }}
          body: ${{ steps.comment-body.outputs.result }}
          edit-mode: replace
